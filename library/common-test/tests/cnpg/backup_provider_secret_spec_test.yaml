suite: cnpg backup provider secret spec test
templates:
  - common.yaml
release:
  name: test-release-name
  namespace: test-release-namespace
tests:
  - it: should create secret for azure provider with connection string
    set:
      cnpg:
        my-pg:
          enabled: true
          user: test-user
          database: test-db
          backups:
            enabled: true
            target: primary
            retentionPolicy: 10d
            provider: azure
            destinationPath: some-path
            azure:
              connectionString: some-connection-string
            manualBackups:
              - name: today
    asserts:
      - documentIndex: &secretDoc 4
        isKind:
          of: Secret
      - documentIndex: *secretDoc
        isAPIVersion:
          of: v1
      - documentIndex: *secretDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-cnpg-my-pg-provider-backup-azure-creds
      - documentIndex: *secretDoc
        equal:
          path: stringData
          value:
            CONNECTION_STRING: some-connection-string
            STORAGE_ACCOUNT: ""
            STORAGE_KEY: ""
            STORAGE_SAS_TOKEN: ""

  - it: should create secret for google provider with application credentials
    set:
      cnpg:
        my-pg:
          enabled: true
          user: test-user
          database: test-db
          backups:
            enabled: true
            target: primary
            retentionPolicy: 10d
            provider: google
            destinationPath: some-path
            google:
              applicationCredentials: some-credentials
            manualBackups:
              - name: today
    asserts:
      - documentIndex: *secretDoc
        isKind:
          of: Secret
      - documentIndex: *secretDoc
        isAPIVersion:
          of: v1
      - documentIndex: *secretDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-cnpg-my-pg-provider-backup-google-creds
      - documentIndex: *secretDoc
        equal:
          path: stringData
          value:
            APPLICATION_CREDENTIALS: some-credentials

  - it: should create secret for s3 provider with application credentials
    set:
      cnpg:
        my-pg:
          enabled: true
          user: test-user
          database: test-db
          backups:
            enabled: true
            target: primary
            retentionPolicy: 10d
            provider: s3
            destinationPath: some-path
            endpointURL: some-url
            s3:
              secretKey: some-secret-key
              accessKey: some-access-key
            manualBackups:
              - name: today
    asserts:
      - documentIndex: *secretDoc
        isKind:
          of: Secret
      - documentIndex: *secretDoc
        isAPIVersion:
          of: v1
      - documentIndex: *secretDoc
        equal:
          path: metadata.name
          value: test-release-name-common-test-cnpg-my-pg-provider-backup-s3-creds
      - documentIndex: *secretDoc
        equal:
          path: stringData
          value:
            ACCESS_SECRET_KEY: some-secret-key
            ACCESS_KEY_ID: some-access-key
