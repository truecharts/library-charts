suite: cronJobs test
templates:
  - common.yaml
chart:
  appVersion: &appVer v1.2.3
tests:
  - it: should pass with default values
    documentIndex: &deploymentDoc 0
    asserts:
      - hasDocuments:
          count: 3
      - isKind:
          of: Deployment

  - it: should fail without schedule in cronjobs
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
    asserts:
      - failedTemplate:
          errorMessage: <cron.schedule> is required in <job> (job-name)

  - it: should fail with non-string schedule in cronjobs
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: 1
    asserts:
      - failedTemplate:
          errorMessage: <cron.schedule> must be a string in <job> (job-name)

  - it: should fail with non-string timezone in cronjobs
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            timezone: 2
    asserts:
      - failedTemplate:
          errorMessage: <cron.timezone> must be a string in <job> (job-name). Leave empty to use the default (UTC)

  - it: should fail with invalid concurrencyPolicy in cronjobs
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            concurrencyPolicy: invalid
    asserts:
      - failedTemplate:
          errorMessage: Invalid option (invalid) for <cron.concurrencyPolicy> in <job> (job-name). Valid options are Allow, Forbid, Replace. Leave empty to use the default (Forbid)

  - it: should fail with negative value in failedJobsHistoryLimit in cronjobs
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            failedJobsHistoryLimit: -1
    asserts:
      - failedTemplate:
          errorMessage: <cron.failedJobsHistoryLimit> (-1) in <job> (job-name) must be a positive integer. Leave empty to use (1)

  - it: should fail with negative value in successfulJobsHistoryLimit in cronjobs
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            successfulJobsHistoryLimit: -1
    asserts:
      - failedTemplate:
          errorMessage: <cron.successfulJobsHistoryLimit> (-1) in <job> (job-name) must be a positive integer. Leave empty to use (3)

  - it: should fail with zero value in startingDeadlineSeconds in cronjobs
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            startingDeadlineSeconds: 0
    asserts:
      - failedTemplate:
          errorMessage: Zero value in <cron.startingDeadlineSeconds> (0) in <job> (job-name) is not allowed.

  - it: should fail with negative value in startingDeadlineSeconds in cronjobs
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            startingDeadlineSeconds: -1
    asserts:
      - failedTemplate:
          errorMessage: <cron.startingDeadlineSeconds> (-1) in <job> (job-name) must be a positive integer.

  - it: should pass with cronjob disabled
    set:
      jobs:
        job-name:
          enabled: false
          cron:
            enabled: false
    asserts:
      - hasDocuments:
          count: 3

  - it: should pass with cronjob defined
    documentIndex: &cronJobDoc 3
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - isKind:
          of: CronJob
      - isAPIVersion:
          of: batch/v1
      - isNull:
          path: metadata.annotations
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-job-name

  - it: should pass with nameOverride in cronjob defined
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          nameOverride: other-job-name
          cron:
            enabled: true
            schedule: "* * * * *"
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-other-job-name

  - it: should pass with global labels and labels from tpl defined in cronjob
    documentIndex: *cronJobDoc
    set:
      l1: val1
      l2: val2
      global:
        labels:
          label1: val3
          label2: val4
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          labels:
            l1: "{{ .Values.l1 }}"
            l2: "{{ .Values.l2 }}"
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: metadata.labels
          value:
            app: common-test
            release: RELEASE-NAME
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: common-test
            app.kubernetes.io/version: *appVer
            helm-revision: "0"
            helm.sh/chart: common-test-1.0.0
            l1: val1
            l2: val2
            label1: val3
            label2: val4

  - it: should pass with annotations from tpl defined in cronjob
    documentIndex: *cronJobDoc
    set:
      a1: val1
      a2: val2
      global:
        annotations:
          annotation1: val3
          annotation2: val4
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          annotations:
            a1: "{{ .Values.a1 }}"
            a2: "{{ .Values.a2 }}"
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: metadata.annotations
          value:
            a1: val1
            a2: val2
            annotation1: val3
            annotation2: val4

  - it: should pass with defaults in cronjob
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - isSubset:
          path: spec
          content:
            schedule: "* * * * *"
            timeZone: UTC
            concurrencyPolicy: Forbid
            failedJobsHistoryLimit: 1
            successfulJobsHistoryLimit: 3

  - it: should pass with defaults in multiple cronjob (1/2)
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          podSpec:
            containers:
              main:
                imageSelector: image
        other-job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - isKind:
          of: CronJob
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-job-name
      - isSubset:
          path: spec
          content:
            schedule: "* * * * *"
            timeZone: UTC
            concurrencyPolicy: Forbid
            failedJobsHistoryLimit: 1
            successfulJobsHistoryLimit: 3

  - it: should pass with defaults in multiple cronjob (2/2)
    documentIndex: &otherCronJobDoc 4
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          podSpec:
            containers:
              main:
                imageSelector: image
        other-job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - isKind:
          of: CronJob
      - equal:
          path: metadata.name
          value: RELEASE-NAME-common-test-other-job-name
      - isSubset:
          path: spec
          content:
            schedule: "* * * * *"
            timeZone: UTC
            concurrencyPolicy: Forbid
            failedJobsHistoryLimit: 1
            successfulJobsHistoryLimit: 3

  - it: should pass with schedule defined defined in cronjob
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: spec.schedule
          value: "* * * * *"

  - it: should pass with timezone defined in cronjob
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            timezone: Europe/Athens
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: spec.timeZone
          value: Europe/Athens

  - it: should pass with concurrencyPolicy defined in cronjob
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            concurrencyPolicy: Allow
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: spec.concurrencyPolicy
          value: Allow

  - it: should pass with failedJobsHistoryLimit defined in cronjob
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            failedJobsHistoryLimit: 5
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: spec.failedJobsHistoryLimit
          value: 5

  - it: should pass with successfulJobsHistoryLimit defined in cronjob
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            successfulJobsHistoryLimit: 5
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: spec.successfulJobsHistoryLimit
          value: 5

  - it: should pass with startingDeadlineSeconds defined in cronjob
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
            startingDeadlineSeconds: 150
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - equal:
          path: spec.startingDeadlineSeconds
          value: 150

  - it: should pass with values set in jobTemplate
    documentIndex: *cronJobDoc
    set:
      jobs:
        job-name:
          enabled: true
          cron:
            enabled: true
            schedule: "* * * * *"
          completions: 5
          parallelism: 6
          backoffLimit: 3
          activeDeadlineSeconds: 120
          ttlSecondsAfterFinished: 150
          podSpec:
            containers:
              main:
                imageSelector: image
    asserts:
      - isSubset:
          path: spec.jobTemplate.spec
          content:
            completions: 5
            parallelism: 6
            backoffLimit: 3
            activeDeadlineSeconds: 120
            ttlSecondsAfterFinished: 150
