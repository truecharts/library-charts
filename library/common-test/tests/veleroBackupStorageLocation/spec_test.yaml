suite: velero backupStorageLocation spec test
templates:
  - common.yaml
release:
  name: test-release-name
  namespace: test-release-namespace
tests:
  - it: should generate correct spec with aws provider and credential
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          credential:
            aws:
              id: my-id
              key: my-key
          objectStorage:
            bucket: my-bucket
    asserts:
      - documentIndex: &secretDoc 0
        isKind:
          of: Secret
      - documentIndex: *secretDoc
        isAPIVersion:
          of: v1
      - documentIndex: *secretDoc
        equal:
          path: stringData
          value:
            cloud: |-
              [default]
              aws_access_key_id=my-id
              aws_secret_access_key=my-key
      - documentIndex: &backStoreLocDoc 1
        isKind:
          of: BackupStorageLocation
      - documentIndex: *backStoreLocDoc
        isAPIVersion:
          of: velero.io/v1
      - documentIndex: *backStoreLocDoc
        equal:
          path: spec
          value:
            provider: velero.io/aws
            credential:
              name: bsl-test-release-name-common-test-my-snap1
              key: cloud
            accessMode: ReadWrite
            objectStorage:
              bucket: my-bucket

  - it: should generate correct spec with s3 provider and credential
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: s3
          credential:
            s3:
              id: my-id
              key: my-key
          objectStorage:
            bucket: my-bucket
    asserts:
      - documentIndex: &secretDoc 0
        isKind:
          of: Secret
      - documentIndex: *secretDoc
        isAPIVersion:
          of: v1
      - documentIndex: *secretDoc
        equal:
          path: stringData
          value:
            cloud: |-
              [default]
              aws_access_key_id=my-id
              aws_secret_access_key=my-key
      - documentIndex: &backStoreLocDoc 1
        isKind:
          of: BackupStorageLocation
      - documentIndex: *backStoreLocDoc
        isAPIVersion:
          of: velero.io/v1
      - documentIndex: *backStoreLocDoc
        equal:
          path: spec
          value:
            provider: velero.io/aws
            credential:
              name: bsl-test-release-name-common-test-my-snap1
              key: cloud
            accessMode: ReadWrite
            objectStorage:
              bucket: my-bucket

  - it: should generate correct spec with provided provider and credential
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: my-provider
          credential:
            name: my-credential
            key: my-key
          objectStorage:
            bucket: my-bucket
    asserts:
      - documentIndex: &backStoreLocDoc 0
        isKind:
          of: BackupStorageLocation
      - documentIndex: *backStoreLocDoc
        isAPIVersion:
          of: velero.io/v1
      - documentIndex: *backStoreLocDoc
        equal:
          path: spec
          value:
            provider: my-provider
            credential:
              name: my-credential
              key: my-key
            accessMode: ReadWrite
            objectStorage:
              bucket: my-bucket

  - it: should generate correct spec with provided provider, credential and custom config
    set:
      region: us-east-1
      useS3PathStyle: true
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          objectStorage:
            bucket: my-bucket
          credential:
            aws:
              id: my-id
              key: my-key
          config:
            region: "{{ .Values.region }}"
            s3ForcePathStyle: "{{ .Values.useS3PathStyle }}"
            bool: false
            shouldNotBeIncluded: ""
            alsoShouldNotBeIncluded:
    asserts:
      - documentIndex: &backStoreLocDoc 1
        isKind:
          of: BackupStorageLocation
      - documentIndex: *backStoreLocDoc
        isAPIVersion:
          of: velero.io/v1
      - documentIndex: *backStoreLocDoc
        equal:
          path: spec
          value:
            provider: velero.io/aws
            credential:
              name: bsl-test-release-name-common-test-my-snap1
              key: cloud
            config:
              region: us-east-1
              s3ForcePathStyle: "true"
              bool: "false"
            accessMode: ReadWrite
            objectStorage:
              bucket: my-bucket

  - it: should generate correct spec with provided accessMode
    set:
      region: us-east-1
      useS3PathStyle: true
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          accessMode: ReadOnly
          objectStorage:
            bucket: my-bucket
          credential:
            aws:
              id: my-id
              key: my-key
          config:
            region: "{{ .Values.region }}"
            s3ForcePathStyle: "{{ .Values.useS3PathStyle }}"
            bool: false
    asserts:
      - documentIndex: &backStoreLocDoc 1
        isKind:
          of: BackupStorageLocation
      - documentIndex: *backStoreLocDoc
        isAPIVersion:
          of: velero.io/v1
      - documentIndex: *backStoreLocDoc
        equal:
          path: spec
          value:
            provider: velero.io/aws
            credential:
              name: bsl-test-release-name-common-test-my-snap1
              key: cloud
            config:
              region: us-east-1
              s3ForcePathStyle: "true"
              bool: "false"
            accessMode: ReadOnly
            objectStorage:
              bucket: my-bucket

  - it: should generate correct spec with provided objectStorage prefix and caCert
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          accessMode: ReadOnly
          objectStorage:
            bucket: my-bucket
            prefix: my-prefix
            caCert: my-ca-cert
          credential:
            aws:
              id: my-id
              key: my-key
    asserts:
      - documentIndex: &backStoreLocDoc 1
        isKind:
          of: BackupStorageLocation
      - documentIndex: *backStoreLocDoc
        isAPIVersion:
          of: velero.io/v1
      - documentIndex: *backStoreLocDoc
        equal:
          path: spec
          value:
            provider: velero.io/aws
            credential:
              name: bsl-test-release-name-common-test-my-snap1
              key: cloud
            accessMode: ReadOnly
            objectStorage:
              bucket: my-bucket
              prefix: my-prefix
              caCert: my-ca-cert

  - it: should generate correct spec with provided backupSyncPeriod
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          backupSyncPeriod: 1h
          objectStorage:
            bucket: my-bucket
          credential:
            aws:
              id: my-id
              key: my-key
    asserts:
      - documentIndex: &backStoreLocDoc 1
        isKind:
          of: BackupStorageLocation
      - documentIndex: *backStoreLocDoc
        isAPIVersion:
          of: velero.io/v1
      - documentIndex: *backStoreLocDoc
        equal:
          path: spec
          value:
            provider: velero.io/aws
            credential:
              name: bsl-test-release-name-common-test-my-snap1
              key: cloud
            accessMode: ReadWrite
            backupSyncPeriod: 1h
            objectStorage:
              bucket: my-bucket

  - it: should generate correct spec with provided validationFrequency
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          validationFrequency: 1h
          objectStorage:
            bucket: my-bucket
          credential:
            aws:
              id: my-id
              key: my-key
    asserts:
      - documentIndex: &backStoreLocDoc 1
        isKind:
          of: BackupStorageLocation
      - documentIndex: *backStoreLocDoc
        isAPIVersion:
          of: velero.io/v1
      - documentIndex: *backStoreLocDoc
        equal:
          path: spec
          value:
            provider: velero.io/aws
            credential:
              name: bsl-test-release-name-common-test-my-snap1
              key: cloud
            accessMode: ReadWrite
            validationFrequency: 1h
            objectStorage:
              bucket: my-bucket

  # Failures
  - it: should fail without provider
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          credential:
            aws:
              id: my-id
              key: my-key
    asserts:
      - failedTemplate:
          errorMessage: Backup Storage Location - Expected non-empty [provider]

  - it: should fail without credential
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: my-provider
    asserts:
      - failedTemplate:
          errorMessage: Backup Storage Location - Expected non-empty [credential]

  - it: should fail without credential.name
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: my-provider
          credential:
            key: my-key
    asserts:
      - failedTemplate:
          errorMessage: Backup Storage Location - Expected non-empty [credential.name]

  - it: should fail without credential.key
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: my-provider
          credential:
            name: my-name
    asserts:
      - failedTemplate:
          errorMessage: Backup Storage Location - Expected non-empty [credential.key]

  - it: should fail without credential.aws.id with provider aws
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          credential:
            aws:
              key: my-key
    asserts:
      - failedTemplate:
          errorMessage: Velero Provider Secret - Expected non-empty [credential.aws|s3.id] for [aws|s3] provider

  - it: should fail without credential.aws.key with provider aws
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          credential:
            aws:
              id: my-id
    asserts:
      - failedTemplate:
          errorMessage: Velero Provider Secret - Expected non-empty [credential.aws|s3.key] for [aws|s3] provider

  - it: should fail invalid accessMode
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          accessMode: invalid
          credential:
            aws:
              id: my-id
              key: my-key
    asserts:
      - failedTemplate:
          errorMessage: Backup Storage Location - Expected [accessMode] to be one of [ReadOnly, ReadWrite], but got [invalid]

  - it: should fail without objectStorage
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          credential:
            aws:
              id: my-id
              key: my-key
    asserts:
      - failedTemplate:
          errorMessage: Backup Storage Location - Expected non-empty [objectStorage]

  - it: should fail without objectStorage.bucket
    set:
      backupStorageLocation:
        my-snap1:
          enabled: true
          provider: aws
          objectStorage:
            prefix: my-prefix
          credential:
            aws:
              id: my-id
              key: my-key
    asserts:
      - failedTemplate:
          errorMessage: Backup Storage Location - Expected non-empty [objectStorage.bucket]
