service:
  main:
    enabled: true
    primary: true
    ports:
      main:
        enabled: true
        primary: true
        protocol: http
        port: 8080

workload:
  main:
    enabled: true
    primary: true
    type: Deployment
    podSpec:
      containers:
        main:
          enabled: true
          primary: true
          args:
            - --port
            - "8080"
          probes:
            liveness:
              enabled: true
              type: http
              port: "{{ .Values.service.main.ports.main.port }}"
            readiness:
              enabled: true
              type: http
              port: "{{ .Values.service.main.ports.main.port }}"
            startup:
              enabled: true
              type: http
              port: "{{ .Values.service.main.ports.main.port }}"

# Parameters for the BackupStorageLocation(s). Configure multiple by adding other element(s) to the backupStorageLocation slice.
# See https://velero.io/docs/v1.6/api-types/backupstoragelocation/
backupStorageLocation:
  test:
    enabled: true
    # provider is the name for the backup storage location provider.
    provider: aws
    objectStorage:
      # bucket is the name of the bucket to store backups in. Required.
      bucket: test
    credential:
      # AWS/s3 credentials to be put into secret (mandatory if provider == aws/s3)
      aws:
        id: fdgsdfghsdfgh
        key: dfgdfhsdfgh
    # Additional provider-specific configuration. See link above
    # for details of required/optional fields for your provider.
    config: {}
    #  region:
    #  s3ForcePathStyle:
    #  s3Url:
    #  kmsKeyId:
    #  resourceGroup:
    #  The ID of the subscription containing the storage account, if different from the clusterâ€™s subscription. (Azure only)
    #  subscriptionId:
    #  storageAccount:
    #  publicUrl:
    #  Name of the GCP service account to use for this backup storage location. Specify the
    #  service account here if you want to use workload identity instead of providing the key file.(GCP only)
    #  serviceAccount:
    #  Option to skip certificate validation or not if insecureSkipTLSVerify is set to be true, the client side should set the
    #  flag. For Velero client Command like velero backup describe, velero backup logs needs to add the flag --insecure-skip-tls-verify
    #  insecureSkipTLSVerify:
